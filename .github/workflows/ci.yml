name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: betthink_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      # Application
      NODE_ENV: test
      PORT: 3000
      API_PREFIX: api
      API_VERSION: v1

      # Auth0 (test values)
      AUTH0_DOMAIN: test.auth0.com
      AUTH0_AUDIENCE: test-audience
      AUTH0_ISSUER: https://test.auth0.com/

      # Database
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/betthink_test?schema=public
      DATABASE_POOL_SIZE: 5

      # Redis
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      REDIS_PASSWORD: ''
      REDIS_DB: 1
      REDIS_TLS_ENABLED: false

      # Odds Providers (test keys)
      UNABATED_API_KEY: test-unabated-key
      UNABATED_BASE_URL: https://api.unabated.com/v1
      THE_ODDS_API_KEY: test-the-odds-api-key
      THE_ODDS_API_BASE_URL: https://api.the-odds-api.com/v4

      # Expo (optional)
      EXPO_ACCESS_TOKEN: ''

      # Rate Limiting
      RATE_LIMIT_TTL: 60
      RATE_LIMIT_MAX_REQUESTS: 1000
      RATE_LIMIT_PREMIUM_MAX_REQUESTS: 5000

      # Caching
      ODDS_CACHE_TTL_SECONDS: 30
      EVENTS_CACHE_TTL_SECONDS: 120

      # Queues
      ODDS_REFRESH_INTERVAL_MINUTES: 3
      ODDS_URGENT_REFRESH_INTERVAL_MINUTES: 1

      # Observability
      OTEL_ENABLED: false
      OTEL_SERVICE_NAME: bt-api-test
      JAEGER_ENDPOINT: ''

      # Logging
      LOG_LEVEL: error
      LOG_PRETTY_PRINT: false

      # CORS
      CORS_ORIGINS: http://localhost:19006
      CORS_CREDENTIALS: true

      # Feature Flags
      FEATURE_ODDS_AGGREGATION: true
      FEATURE_PUSH_NOTIFICATIONS: false
      FEATURE_ANALYTICS_QUEUE: false

      # Security
      IDEMPOTENCY_KEY_TTL_HOURS: 24
      JWT_CACHE_TTL_SECONDS: 3600

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npm run prisma:generate

      - name: Run Prisma migrations
        run: npx prisma migrate deploy

      - name: Run unit tests
        run: npm test -- --passWithNoTests

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Lint
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npm run prisma:generate

      - name: Build
        run: npm run build
